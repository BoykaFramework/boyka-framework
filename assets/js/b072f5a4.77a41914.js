"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[4537],{167:(e,t,i)=>{i.d(t,{Zo:()=>d,kt:()=>h});var a=i(5721);function n(e,t,i){return t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}function o(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,a)}return i}function r(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?o(Object(i),!0).forEach((function(t){n(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):o(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}function l(e,t){if(null==e)return{};var i,a,n=function(e,t){if(null==e)return{};var i,a,n={},o=Object.keys(e);for(a=0;a<o.length;a++)i=o[a],t.indexOf(i)>=0||(n[i]=e[i]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)i=o[a],t.indexOf(i)>=0||Object.prototype.propertyIsEnumerable.call(e,i)&&(n[i]=e[i])}return n}var s=a.createContext({}),c=function(e){var t=a.useContext(s),i=t;return e&&(i="function"==typeof e?e(t):r(r({},t),e)),i},d=function(e){var t=c(e.components);return a.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var i=e.components,n=e.mdxType,o=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),m=c(i),h=n,u=m["".concat(s,".").concat(h)]||m[h]||p[h]||o;return i?a.createElement(u,r(r({ref:t},d),{},{components:i})):a.createElement(u,r({ref:t},d))}));function h(e,t){var i=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=i.length,r=new Array(o);r[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:n,r[1]=l;for(var c=2;c<o;c++)r[c]=i[c];return a.createElement.apply(null,r)}return a.createElement.apply(null,i)}m.displayName="MDXCreateElement"},9060:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>s,contentTitle:()=>r,default:()=>p,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var a=i(8533),n=(i(5721),i(167));const o={title:"DriverActions",sidebar_position:1},r=void 0,l={unversionedId:"actions/driver-actions",id:"actions/driver-actions",title:"DriverActions",description:"acceptAlert",source:"@site/docs/api/actions/driver-actions.md",sourceDirName:"actions",slug:"/actions/driver-actions",permalink:"/boyka-framework/api/actions/driver-actions",draft:!1,editUrl:"https://github.com/BoykaFramework/boyka-framework/edit/main/website/docs/api/actions/driver-actions.md",tags:[],version:"current",lastUpdatedBy:"Wasiq Bhamla",lastUpdatedAt:1672684738,formattedLastUpdatedAt:"Jan 2, 2023",sidebarPosition:1,frontMatter:{title:"DriverActions",sidebar_position:1},sidebar:"api",next:{title:"DropDownActions",permalink:"/boyka-framework/api/actions/drop-down-actions"}},s={},c=[{value:"<code>acceptAlert</code>",id:"accept-alert",level:2},{value:"<code>acceptAlert (text)</code>",id:"accept-alert-text",level:2},{value:"<code>closeWindow</code>",id:"close-window",level:2},{value:"<code>cookie (name)</code>",id:"cookie-name",level:2},{value:"<code>cookies</code>",id:"cookies",level:2},{value:"<code>currentWindowHandle</code>",id:"current-window-handle",level:2},{value:"<code>deleteAllCookies</code>",id:"delete-all-cookies",level:2},{value:"<code>deleteCookie (name)</code>",id:"delete-cookie-name",level:2},{value:"<code>dismissAlert</code>",id:"dismiss-alert",level:2},{value:"<code>executeScript (script, args[])</code>",id:"execute-script",level:2},{value:"<code>fullScreen</code>",id:"full-screen",level:2},{value:"<code>maximize</code>",id:"maximize",level:2},{value:"<code>minimize</code>",id:"minimize",level:2},{value:"<code>navigate</code>",id:"navigate",level:2},{value:"<code>pause</code>",id:"pause",level:2},{value:"<code>saveLogs</code>",id:"savelogs",level:2},{value:"<code>swipe</code>",id:"swipe",level:2},{value:"<code>switchToFrame (name)</code>",id:"switch-to-frame-name",level:2},{value:"<code>switchToMainWindow</code>",id:"switch-to-main-window",level:2},{value:"<code>switchToNewWindow</code>",id:"switch-to-new-window",level:2},{value:"<code>switchToParentFrame</code>",id:"switch-to-parent-frame",level:2},{value:"<code>switchToWindow (handle)</code>",id:"switch-to-window-handle",level:2},{value:"<code>takeScreenshot</code>",id:"take-screenshot",level:2},{value:"<code>takeScreenshot (path)</code>",id:"take-screenshot-path",level:2},{value:"<code>title</code>",id:"title",level:2},{value:"<code>viewportSize</code>",id:"viewport-size",level:2},{value:"<code>waitUntil</code>",id:"wait-until",level:2},{value:"<code>windowHandles</code>",id:"window-handles",level:2}],d={toc:c};function p(e){let{components:t,...i}=e;return(0,n.kt)("wrapper",(0,a.Z)({},d,i,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h2",{id:"accept-alert"},(0,n.kt)("inlineCode",{parentName:"h2"},"acceptAlert")),(0,n.kt)("p",null,"This method returns the alert text and accepts the alert."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-java"},"import static com.github.wasiqb.boyka.actions.DriverActions.acceptAlert;\n. . .\nString message = acceptAlert ();\n")),(0,n.kt)("h2",{id:"accept-alert-text"},(0,n.kt)("inlineCode",{parentName:"h2"},"acceptAlert (text)")),(0,n.kt)("p",null,"This method returns the alert text, enter text in prompt and accepts the prompt alert."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-java"},'import static com.github.wasiqb.boyka.actions.DriverActions.acceptAlert;\n. . .\nString message = acceptAlert ("Hello World");\n')),(0,n.kt)("h2",{id:"close-window"},(0,n.kt)("inlineCode",{parentName:"h2"},"closeWindow")),(0,n.kt)("p",null,"This method will close the open browser window."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-java"},"import static com.github.wasiqb.boyka.actions.DriverActions.closeWindow;\n. . .\ncloseWindow ();\n")),(0,n.kt)("h2",{id:"cookie-name"},(0,n.kt)("inlineCode",{parentName:"h2"},"cookie (name)")),(0,n.kt)("p",null,"This method will get the cookie from the browser based on it's name."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-java"},'import static com.github.wasiqb.boyka.actions.DriverActions.cookie;\nimport org.openqa.selenium.Cookie;\n. . .\nCookie c = cookie ("cookie-name");\n')),(0,n.kt)("h2",{id:"cookies"},(0,n.kt)("inlineCode",{parentName:"h2"},"cookies")),(0,n.kt)("p",null,"This method will get all the cookie from the browser and return all the cookie names as list."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-java"},"import static com.github.wasiqb.boyka.actions.DriverActions.cookies;\n. . .\nList<String> cookieNames = cookies ();\n")),(0,n.kt)("h2",{id:"current-window-handle"},(0,n.kt)("inlineCode",{parentName:"h2"},"currentWindowHandle")),(0,n.kt)("p",null,"This method returns the current window handle."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-java"},"import static com.github.wasiqb.boyka.actions.DriverActions.currentWindowHandle;\n. . .\nString handle = currentWindowHandle ();\n")),(0,n.kt)("h2",{id:"delete-all-cookies"},(0,n.kt)("inlineCode",{parentName:"h2"},"deleteAllCookies")),(0,n.kt)("p",null,"This method will delete all the cookies from the browser."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-java"},"import static com.github.wasiqb.boyka.actions.DriverActions.deleteAllCookies;\n. . .\ndeleteAllCookies ();\n")),(0,n.kt)("h2",{id:"delete-cookie-name"},(0,n.kt)("inlineCode",{parentName:"h2"},"deleteCookie (name)")),(0,n.kt)("p",null,"This method will delete the cookie from the browser based on it's name."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-java"},'import static com.github.wasiqb.boyka.actions.DriverActions.deleteCookie;\n. . .\ndeleteCookie ("cookie-name");\n')),(0,n.kt)("h2",{id:"dismiss-alert"},(0,n.kt)("inlineCode",{parentName:"h2"},"dismissAlert")),(0,n.kt)("p",null,"This method will dismiss the alert and returns the alert text."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-java"},"import static com.github.wasiqb.boyka.actions.DriverActions.dismissAlert;\n. . .\nString message = dismissAlert ();\n")),(0,n.kt)("h2",{id:"execute-script"},(0,n.kt)("inlineCode",{parentName:"h2"},"executeScript (script, args[])")),(0,n.kt)("p",null,"This method will execute the JS script and returns the result."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-java"},"import static com.github.wasiqb.boyka.actions.DriverActions.executeScript;\n. . .\nString output = executeScript (\"alert('Hello World');\");\n")),(0,n.kt)("h2",{id:"full-screen"},(0,n.kt)("inlineCode",{parentName:"h2"},"fullScreen")),(0,n.kt)("p",null,"This method will on-demand do full screen on the browser window."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-java"},"import static com.github.wasiqb.boyka.actions.DriverActions.fullScreen;\n. . .\nfullScreen ();\n")),(0,n.kt)("h2",{id:"maximize"},(0,n.kt)("inlineCode",{parentName:"h2"},"maximize")),(0,n.kt)("p",null,"This method will maximize the browser window."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-java"},"import static com.github.wasiqb.boyka.actions.DriverActions.maximize;\n. . .\nmaximize ();\n")),(0,n.kt)("h2",{id:"minimize"},(0,n.kt)("inlineCode",{parentName:"h2"},"minimize")),(0,n.kt)("p",null,"This method will minimize the browser window."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-java"},"import static com.github.wasiqb.boyka.actions.DriverActions.minimize;\n. . .\nminimize ();\n")),(0,n.kt)("h2",{id:"navigate"},(0,n.kt)("inlineCode",{parentName:"h2"},"navigate")),(0,n.kt)("p",null,"This method is used to perform navigation related actions."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-java"},'import static com.github.wasiqb.boyka.actions.DriverActions.navigate;\n. . .\nnavigate ().to ("https://google.com");\n')),(0,n.kt)("h2",{id:"pause"},(0,n.kt)("inlineCode",{parentName:"h2"},"pause")),(0,n.kt)("p",null,"This method is used to navigate to the given URL."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-java"},"import static com.github.wasiqb.boyka.actions.DriverActions.pause;\nimport static java.time.Duration.ofMillis;\n. . .\npause (ofMillis (100));\n")),(0,n.kt)("h2",{id:"savelogs"},(0,n.kt)("inlineCode",{parentName:"h2"},"saveLogs")),(0,n.kt)("p",null,"This method will save all the logs captured by the Driver."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-java"},"import static com.github.wasiqb.boyka.actions.DriverActions.saveLogs;\n. . .\nsaveLogs ();\n")),(0,n.kt)("h2",{id:"swipe"},(0,n.kt)("inlineCode",{parentName:"h2"},"swipe")),(0,n.kt)("p",null,"This method will return Swipe class instance which can be used to perform swipe gesture"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-java"},"import static com.github.wasiqb.boyka.actions.DriverActions.swipe;\n. . .\nswipe ().up ();\n")),(0,n.kt)("h2",{id:"switch-to-frame-name"},(0,n.kt)("inlineCode",{parentName:"h2"},"switchToFrame (name)")),(0,n.kt)("p",null,"This method will switch to the given frame by it's name."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-java"},'import static com.github.wasiqb.boyka.actions.DriverActions.switchToFrame;\n. . .\nswitchToFrame ("frame-name");\n')),(0,n.kt)("admonition",{type:"tip"},(0,n.kt)("p",{parentName:"admonition"},"In order to come out of this frame, use ",(0,n.kt)("a",{parentName:"p",href:"#switchtoparentframe"},(0,n.kt)("inlineCode",{parentName:"a"},"switchToParentFrame"))," method.")),(0,n.kt)("h2",{id:"switch-to-main-window"},(0,n.kt)("inlineCode",{parentName:"h2"},"switchToMainWindow")),(0,n.kt)("p",null,"This method will switch to the first window after you close any of the other opened windows."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-java"},"import static com.github.wasiqb.boyka.actions.DriverActions.switchToMainWindow;\n. . .\nswitchToMainWindow ();\n")),(0,n.kt)("h2",{id:"switch-to-new-window"},(0,n.kt)("inlineCode",{parentName:"h2"},"switchToNewWindow")),(0,n.kt)("p",null,"This method is used to switch to new window of given type."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-java"},"import static com.github.wasiqb.boyka.actions.DriverActions.switchToNewWindow;\nimport org.openqa.selenium.WindowType;\n. . .\nswitchToNewWindow (WindowType.TAB);\n")),(0,n.kt)("h2",{id:"switch-to-parent-frame"},(0,n.kt)("inlineCode",{parentName:"h2"},"switchToParentFrame")),(0,n.kt)("p",null,"This method will switch to the parent frame of the current frame. This method is used to come out of any iframe."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-java"},"import static com.github.wasiqb.boyka.actions.DriverActions.switchToParentFrame;\n. . .\nswitchToParentFrame ();\n")),(0,n.kt)("h2",{id:"switch-to-window-handle"},(0,n.kt)("inlineCode",{parentName:"h2"},"switchToWindow (handle)")),(0,n.kt)("p",null,"This method is used to switch to window of given handle."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-java"},'import static com.github.wasiqb.boyka.actions.DriverActions.switchToWindow;\n. . .\nswitchToWindow ("window-handle");\n')),(0,n.kt)("h2",{id:"take-screenshot"},(0,n.kt)("inlineCode",{parentName:"h2"},"takeScreenshot")),(0,n.kt)("p",null,"This method will take the screenshot of the current page and save it at the path configured in ",(0,n.kt)("inlineCode",{parentName:"p"},"boyka-config.json"),"."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-java"},"import static com.github.wasiqb.boyka.actions.DriverActions.takeScreenshot;\n. . .\ntakeScreenshot ();\n")),(0,n.kt)("h2",{id:"take-screenshot-path"},(0,n.kt)("inlineCode",{parentName:"h2"},"takeScreenshot (path)")),(0,n.kt)("p",null,"This method will take the screenshot of the current page and save it at the path mentioned in the parameter."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-java"},'import static com.github.wasiqb.boyka.actions.DriverActions.takeScreenshot;\n. . .\ntakeScreenshot ("path/to/screenshot.png");\n')),(0,n.kt)("h2",{id:"title"},(0,n.kt)("inlineCode",{parentName:"h2"},"title")),(0,n.kt)("p",null,"This method will get the title of the browser window."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-java"},"import static com.github.wasiqb.boyka.actions.DriverActions.title;\n. . .\nSystem.out.println (title ());\n")),(0,n.kt)("h2",{id:"viewport-size"},(0,n.kt)("inlineCode",{parentName:"h2"},"viewportSize")),(0,n.kt)("p",null,"This method will the size dimension of the screen viewport for Mobile screen or Browser window."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-java"},"import static com.github.wasiqb.boyka.actions.DriverActions.viewportSize;\nimport org.openqa.selenium.Dimension;\n. . .\nDimension size = viewportSize ();\n")),(0,n.kt)("h2",{id:"wait-until"},(0,n.kt)("inlineCode",{parentName:"h2"},"waitUntil")),(0,n.kt)("p",null,"This method will wait for any given condition to be true. It takes in Selenium WebDrivers ",(0,n.kt)("inlineCode",{parentName:"p"},"ExpectedCondition<Boolean>")," object as parameter."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-java"},"import static com.github.wasiqb.boyka.actions.DriverActions.waitUntil;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\n. . .\nwaitUntil (ExpectedConditions.urlMatches (URL));\n")),(0,n.kt)("h2",{id:"window-handles"},(0,n.kt)("inlineCode",{parentName:"h2"},"windowHandles")),(0,n.kt)("p",null,"This method will get the list of all open window handles."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-java"},"import static com.github.wasiqb.boyka.actions.DriverActions.windowHandles;\n. . .\nList<String> handles = windowHandles ();\n")))}p.isMDXComponent=!0}}]);