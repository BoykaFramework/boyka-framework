"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[1304],{167:(e,t,r)=>{r.d(t,{Zo:()=>d,kt:()=>f});var n=r(5721);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function a(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var p=n.createContext({}),l=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},d=function(e){var t=l(e.components);return n.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,o=e.originalType,p=e.parentName,d=a(e,["components","mdxType","originalType","parentName"]),c=l(r),f=i,m=c["".concat(p,".").concat(f)]||c[f]||u[f]||o;return r?n.createElement(m,s(s({ref:t},d),{},{components:r})):n.createElement(m,s({ref:t},d))}));function f(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=r.length,s=new Array(o);s[0]=c;var a={};for(var p in t)hasOwnProperty.call(t,p)&&(a[p]=t[p]);a.originalType=e,a.mdxType="string"==typeof e?e:i,s[1]=a;for(var l=2;l<o;l++)s[l]=r[l];return n.createElement.apply(null,s)}return n.createElement.apply(null,r)}c.displayName="MDXCreateElement"},124:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>s,default:()=>u,frontMatter:()=>o,metadata:()=>a,toc:()=>l});var n=r(8533),i=(r(5721),r(167));const o={sidebar_position:4,title:"\u2705 Verify Response"},s=void 0,a={unversionedId:"guides/api/verify-response",id:"guides/api/verify-response",title:"\u2705 Verify Response",description:"Once the ApiResponse object is returned from the withRequest method, it can be used to verify that the response is valid.",source:"@site/docs/framework-docs/guides/api/verify-response.md",sourceDirName:"guides/api",slug:"/guides/api/verify-response",permalink:"/boyka-framework/docs/guides/api/verify-response",draft:!1,editUrl:"https://github.com/BoykaFramework/boyka-framework/edit/main/website/docs/framework-docs/guides/api/verify-response.md",tags:[],version:"current",lastUpdatedBy:"Wasiq Bhamla",lastUpdatedAt:1679245869,formattedLastUpdatedAt:"Mar 19, 2023",sidebarPosition:4,frontMatter:{sidebar_position:4,title:"\u2705 Verify Response"},sidebar:"docs",previous:{title:"\ud83d\udd2b Execute Request",permalink:"/boyka-framework/docs/guides/api/execute-request"},next:{title:"\ud83e\ude9b Setup Configuration",permalink:"/boyka-framework/docs/guides/ui/web/setup-config"}},p={},l=[{value:"Verification methods",id:"verification-methods",level:3},{value:"Methods to get response data",id:"methods-to-get-response-data",level:3}],d={toc:l};function u(e){let{components:t,...r}=e;return(0,i.kt)("wrapper",(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Once the ",(0,i.kt)("inlineCode",{parentName:"p"},"ApiResponse")," object is returned from the ",(0,i.kt)("inlineCode",{parentName:"p"},"withRequest")," method, it can be used to verify that the response is valid."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},'final ApiResponse response = ApiManager.execute (request);\n\nresponse.verifyStatusCode ()\n    .isEqualTo (201);\nresponse.verifyTextField ("id")\n    .isNotNull ();\nresponse.verifyTextField ("name")\n    .isEqualTo (user.getName ());\nresponse.verifyTextField ("job")\n    .isEqualTo (user.getJob ());\nresponse.verifyTextField ("createdAt")\n    .isNotNull ();\nresponse.verifySchema("CreateUserSchema.json");\n')),(0,i.kt)("h3",{id:"verification-methods"},"Verification methods"),(0,i.kt)("p",null,"Following are the methods exposed in ",(0,i.kt)("inlineCode",{parentName:"p"},"ApiResponse")," class to verify the response body and status code:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"verifyBooleanField"),": Verifies the boolean field in response body."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"verifyHeader"),": Verifies the header in response."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"verifyIntField"),": Verifies the integer field in response body."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"verifySchema"),": Verifies the response body against the given schema."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"verifyStatusCode"),": Verifies the status code of response."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"verifyStatusMessage"),": Verifies the status message of response."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"verifyTextField"),": Verifies the text field in response body.")),(0,i.kt)("h3",{id:"methods-to-get-response-data"},"Methods to get response data"),(0,i.kt)("p",null,"Following are the methods exposed in ",(0,i.kt)("inlineCode",{parentName:"p"},"ApiResponse")," class to get response data:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"getResponseData (expression)"),": Returns the response data as String."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"getResponseData (expression, type)"),": Returns the response data as per the specified class type.")),(0,i.kt)("admonition",{type:"info"},(0,i.kt)("p",{parentName:"admonition"},"All the verification methods in ",(0,i.kt)("inlineCode",{parentName:"p"},"ApiResponse")," class uses ",(0,i.kt)("a",{parentName:"p",href:"https://truth.dev/"},"Google Truth library")," and exposes it's methods to verify the response.")))}u.isMDXComponent=!0}}]);