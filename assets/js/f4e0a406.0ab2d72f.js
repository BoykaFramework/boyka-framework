"use strict";(globalThis.webpackChunkwebsite=globalThis.webpackChunkwebsite||[]).push([[3691],{1285:(e,i,o)=>{o.d(i,{R:()=>c,x:()=>s});var n=o(3303);const d={},t=n.createContext(d);function c(e){const i=n.useContext(t);return n.useMemo(function(){return"function"==typeof e?e(i):{...i,...e}},[i,e])}function s(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(d):e.components||d:c(e.components),n.createElement(t.Provider,{value:i},e.children)}},4222:(e,i,o)=>{o.r(i),o.d(i,{assets:()=>a,contentTitle:()=>s,default:()=>h,frontMatter:()=>c,metadata:()=>n,toc:()=>r});const n=JSON.parse('{"id":"actions/device/android-device-actions","title":"AndroidDeviceActions","description":"Static methods","source":"@site/docs/api/actions/device/android-device-actions.md","sourceDirName":"actions/device","slug":"/actions/device/android-device-actions","permalink":"/boyka-framework/api/actions/device/android-device-actions","draft":false,"unlisted":false,"editUrl":"https://github.com/BoykaFramework/boyka-framework/edit/main/website/docs/api/actions/device/android-device-actions.md","tags":[],"version":"current","lastUpdatedBy":"Wasiq Bhamla","lastUpdatedAt":1761226456000,"sidebarPosition":1,"frontMatter":{"title":"AndroidDeviceActions","sidebar_position":1},"sidebar":"api","previous":{"title":"ApiActions","permalink":"/boyka-framework/api/actions/api/api-actions"},"next":{"title":"DeviceActions","permalink":"/boyka-framework/api/actions/device/device-actions"}}');var d=o(7711),t=o(1285);const c={title:"AndroidDeviceActions",sidebar_position:1},s=void 0,a={},r=[{value:"Static methods",id:"static-methods",level:2},{value:"<code>onAndroidDevice</code>",id:"on-android-device",level:3},{value:"Instance methods",id:"instance-methods",level:2},{value:"<code>getClipboardText</code>",id:"get-clipboard-text",level:3},{value:"<code>openNotification</code>",id:"open-notification",level:3},{value:"<code>pressKey (key)</code>",id:"press-key",level:3},{value:"<code>pullFile</code>",id:"pull-file",level:3},{value:"<code>putFile</code>",id:"put-file",level:3},{value:"<code>setClipboardText</code>",id:"set-clipboard-text",level:3},{value:"<code>verifyClipboardText</code>",id:"verify-clipboard-text",level:3}];function l(e){const i={code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,d.jsxs)(d.Fragment,{children:[(0,d.jsx)(i.h2,{id:"static-methods",children:"Static methods"}),"\n",(0,d.jsx)(i.h3,{id:"on-android-device",children:(0,d.jsx)(i.code,{children:"onAndroidDevice"})}),"\n",(0,d.jsxs)(i.p,{children:["This will return ",(0,d.jsx)(i.code,{children:"IAndroidDeviceActions"})," which will expose different methods to handle different Android device specific actions."]}),"\n",(0,d.jsx)(i.pre,{children:(0,d.jsx)(i.code,{className:"language-java",children:"IAndroidDeviceActions androidActions = AndroidDeviceActions.onAndroidDevice ();\n"})}),"\n",(0,d.jsx)(i.h2,{id:"instance-methods",children:"Instance methods"}),"\n",(0,d.jsx)(i.h3,{id:"get-clipboard-text",children:(0,d.jsx)(i.code,{children:"getClipboardText"})}),"\n",(0,d.jsx)(i.p,{children:"This method is used to get the device clipboard text."}),"\n",(0,d.jsx)(i.pre,{children:(0,d.jsx)(i.code,{className:"language-java",children:"import static io.github.boykaframework.actions.device.AndroidDeviceActions.onAndroidDevice;\n. . .\nString text = onAndroidDevice ().getClipboardText ();\n"})}),"\n",(0,d.jsx)(i.h3,{id:"open-notification",children:(0,d.jsx)(i.code,{children:"openNotification"})}),"\n",(0,d.jsx)(i.p,{children:"This method is used to open the notification panel."}),"\n",(0,d.jsx)(i.pre,{children:(0,d.jsx)(i.code,{className:"language-java",children:"import static io.github.boykaframework.actions.device.AndroidDeviceActions.onAndroidDevice;\n. . .\nonAndroidDevice ().openNotification ();\n"})}),"\n",(0,d.jsx)(i.h3,{id:"press-key",children:(0,d.jsx)(i.code,{children:"pressKey (key)"})}),"\n",(0,d.jsx)(i.p,{children:"This method is used to press Android device keys."}),"\n",(0,d.jsx)(i.pre,{children:(0,d.jsx)(i.code,{className:"language-java",children:"import static io.github.boykaframework.actions.device.AndroidDeviceActions.onAndroidDevice;\n. . .\nonAndroidDevice ().pressKey (AndroidKey.BACK);\n"})}),"\n",(0,d.jsx)(i.h3,{id:"pull-file",children:(0,d.jsx)(i.code,{children:"pullFile"})}),"\n",(0,d.jsx)(i.p,{children:"This method is used to pull a file from the device."}),"\n",(0,d.jsx)(i.pre,{children:(0,d.jsx)(i.code,{className:"language-java",children:'import static io.github.boykaframework.actions.device.AndroidDeviceActions.onAndroidDevice;\n. . .\nbyte[] content = onAndroidDevice ().pullFile ("/sdcard/Download/boyka.png");\n'})}),"\n",(0,d.jsx)(i.h3,{id:"put-file",children:(0,d.jsx)(i.code,{children:"putFile"})}),"\n",(0,d.jsx)(i.p,{children:"This method is used to push a file to the device."}),"\n",(0,d.jsx)(i.pre,{children:(0,d.jsx)(i.code,{className:"language-java",children:'import static io.github.boykaframework.actions.device.AndroidDeviceActions.onAndroidDevice;\n. . .\nboolean success = onAndroidDevice ().putFile (new File ("/path/to/local/file.png"), "/sdcard/Download/boyka.png");\n'})}),"\n",(0,d.jsx)(i.h3,{id:"set-clipboard-text",children:(0,d.jsx)(i.code,{children:"setClipboardText"})}),"\n",(0,d.jsx)(i.p,{children:"This method is used to set the device clipboard text."}),"\n",(0,d.jsx)(i.pre,{children:(0,d.jsx)(i.code,{className:"language-java",children:'import static io.github.boykaframework.actions.device.AndroidDeviceActions.onAndroidDevice;\n. . .\nonAndroidDevice ().setClipboardText ("Hello, World!");\n'})}),"\n",(0,d.jsx)(i.h3,{id:"verify-clipboard-text",children:(0,d.jsx)(i.code,{children:"verifyClipboardText"})}),"\n",(0,d.jsx)(i.p,{children:"This method is used to verify the device clipboard text."}),"\n",(0,d.jsx)(i.pre,{children:(0,d.jsx)(i.code,{className:"language-java",children:'import static io.github.boykaframework.actions.device.AndroidDeviceActions.onAndroidDevice;\n. . .\nonAndroidDevice ().verifyClipboardText ()\n    .isEqualTo ("Hello World!");\n'})})]})}function h(e={}){const{wrapper:i}={...(0,t.R)(),...e.components};return i?(0,d.jsx)(i,{...e,children:(0,d.jsx)(l,{...e})}):l(e)}}}]);