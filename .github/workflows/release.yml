# Auto release version to Maven Central and GitHub Releases
# As soon as PR from staging to main gets merged and closed.
name: Deploy Release to GitHub and Maven Central

on:
  pull_request:
    branches:
      - main
    types:
      - closed

env:
  PUSH_TOKEN: ${{ secrets.PUSH_TOKEN }}
  GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
  GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
  NEXUS_USERNAME: ${{ secrets.NEXUS_USERNAME }}
  NEXUS_PASSWORD: ${{ secrets.NEXUS_PASSWORD }}

jobs:
  prepare-release:
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true

    outputs:
      new-version: ${{ steps.version.outputs.version }}

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3

      - name: Setup Node v16
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install

      - name: Get the previous release version
        id: old_version
        run: |
          export MVN_OLD_VERSION=$(git describe --match "v[0-9].[0-9].[0-9]" --abbrev=0 --tags HEAD)
          echo "::set-output name=previous_version::$MVN_OLD_VERSION"

      - name: Update release version
        run: yarn release

      - name: Get the new version
        id: version
        run: |
          export MVN_VERSION=$(node -pe "require('./website/package.json').version")
          echo "::set-output name=version::$MVN_VERSION"

      - name: Generate Change log
        if: steps.version.outputs.version != null
        run: |
          yarn changelog --from ${{ steps.old_version.outputs.previous_version }} --next-version v${{ steps.version.outputs.version }} > CHANGELOG.md

      - name: Upload updated version related files to artifacts
        uses: actions/upload-artifact@v3
        with:
          name: target
          path: |
            ${{ github.workspace }}/.yarn
            ${{ github.workspace }}/lerna.json
            ${{ github.workspace }}/CHANGELOG.md
            ${{ github.workspace }}/website/package.json

  release-snapshot:
    runs-on: ubuntu-latest
    needs: prepare-release
    if: needs.prepare-release.outputs.new-version != null
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3

      - name: Setup Node v16
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: 'yarn'

      - name: Install Java and Maven
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Restore local Maven repository
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ github.sha }}

      - name: Download artifacts data
        uses: actions/download-artifact@v3
        with:
          name: target

      - name: Maven command to update snapshot version
        run: mvn build-helper:parse-version versions:set -f core-java/pom.xml -DnewVersion=${{ needs.prepare-release.outputs.new-version }}-SNAPSHOT versions:commit

      - name: Build the artifacts
        run: mvn clean install -f core-java/pom.xml -DskipTests -Dcheckstyle.skip

      - name: Release snapshot to Maven central
        uses: samuelmeuli/action-maven-publish@v1
        with:
          gpg_private_key: ${{ env.GPG_PRIVATE_KEY }}
          gpg_passphrase: ${{ env.GPG_PASSPHRASE }}
          nexus_username: ${{ env.NEXUS_USERNAME }}
          nexus_password: ${{ env.NEXUS_PASSWORD }}
          maven_profiles: release
          server_id: ossrh
          maven_args: --settings ${{ github.workspace }}/core-java/setting/settings.xml -f core-java/pom.xml -DskipTests -Dcheckstyle.skip -B

      - name: Upload target folder
        uses: actions/upload-artifact@v3
        with:
          name: target
          path: |
            ${{ github.workspace }}/lerna.json
            ${{ github.workspace }}/CHANGELOG.md
            ${{ github.workspace }}/website/package.json
            ${{ github.workspace }}/core-java/target
            ${{ github.workspace }}/core-java/pom.xml

  release:
    runs-on: ubuntu-latest
    needs:
      - prepare-release
      - release-snapshot

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: 'yarn'

      - name: Install Java and Maven
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Restore local Maven repository
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ github.sha }}

      - name: Download artifacts data
        uses: actions/download-artifact@v3
        with:
          name: target

      - name: Maven command to update release version
        run: mvn build-helper:parse-version versions:set -f core-java/pom.xml -DnewVersion=${{ needs.prepare-release.outputs.new-version }} versions:commit

      - name: Build the artifacts
        run: mvn clean install -f core-java/pom.xml -DskipTests -Dcheckstyle.skip

      - name: Release to Maven central
        uses: samuelmeuli/action-maven-publish@v1
        with:
          gpg_private_key: ${{ env.GPG_PRIVATE_KEY }}
          gpg_passphrase: ${{ env.GPG_PASSPHRASE }}
          nexus_username: ${{ env.NEXUS_USERNAME }}
          nexus_password: ${{ env.NEXUS_PASSWORD }}
          maven_profiles: release
          server_id: ossrh
          maven_args: --settings ${{ github.workspace }}/core-java/setting/settings.xml -f core-java/pom.xml -DskipTests -Dcheckstyle.skip -B

      - name: Upload target folder
        uses: actions/upload-artifact@v3
        with:
          name: target
          path: |
            ${{ github.workspace }}/lerna.json
            ${{ github.workspace }}/CHANGELOG.md
            ${{ github.workspace }}/website/package.json
            ${{ github.workspace }}/core-java/target
            ${{ github.workspace }}/core-java/pom.xml

  push-pom-tag:
    runs-on: ubuntu-latest
    needs:
      - prepare-release
      - release

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3
        with:
          token: ${{ env.PUSH_TOKEN }}

      - name: Install Java and Maven
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Setup Node v16
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: 'yarn'

      - name: Download target folder
        uses: actions/download-artifact@v3
        with:
          name: target

      - name: Import GPG key
        uses: crazy-max/ghaction-import-gpg@v5
        with:
          gpg_private_key: ${{ env.GPG_PRIVATE_KEY }}
          passphrase: ${{ env.GPG_PASSPHRASE }}
          git_user_signingkey: true
          git_commit_gpgsign: true

      - name: Push updated pom.xml
        uses: EndBug/add-and-commit@v9
        with:
          add: |
            core-java/pom.xml
            lerna.json
            CHANGELOG.md
            website/package.json
          message: |
            chore(Internal): :bookmark: released latest version to maven central

            [skip ci]
          push: true
          default_author: user_info
          commit: --no-verify

      - name: Create and Push Tag
        uses: EndBug/add-and-commit@v9
        with:
          tag: v${{ needs.prepare-release.outputs.new-version }}
          message: ðŸŽ‰ Released v${{ needs.prepare-release.outputs.new-version }} to Maven central [skip ci]
          default_author: user_info
          push: true

  github-release:
    runs-on: ubuntu-latest
    needs:
      - prepare-release
      - push-pom-tag

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ env.PUSH_TOKEN }}
          GITHUB_REPOSITORY: ${{ github.repository }}
        with:
          tag_name: v${{ needs.prepare-release.outputs.new-version }}
          name: Version ${{ needs.prepare-release.outputs.new-version }}
          prerelease: false
          draft: false
          body_path: CHANGELOG.md
          discussion_category_name: Announcements
          generate_release_notes: false
          files: |
            core-java/target/*.jar
            core-java/target/*.pom
