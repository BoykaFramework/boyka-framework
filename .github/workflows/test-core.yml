name: Test boyka-framework project

on:
  pull_request:
    branches:
      - develop
    paths:
      - 'core-java/**'
      - '.github/**'

  push:
    branches:
      - develop
      - staging
      - main
    paths:
      - 'core-java/**'
      - '.github/**'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3

      - name: Install Java and Maven
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Build the project
        run: mvn install -f core-java/pom.xml -DskipTests

      - name: Upload target folder
        uses: actions/upload-artifact@v3
        with:
          name: target
          path: ${{ github.workspace }}/core-java/target

      - name: Cache local Maven repository
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ github.sha }}

  test:
    needs:
      - build
    runs-on: macos-latest
    env:
      BS_USER: ${{ secrets.BS_USER }}
      BS_KEY: ${{ secrets.BS_KEY }}
      LT_USER: ${{ secrets.LT_USER }}
      LT_KEY: ${{ secrets.LT_KEY }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3

      - name: Install Java and Maven
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Restore local Maven repository
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ github.sha }}

      - name: Download target folder
        uses: actions/download-artifact@v3
        with:
          name: target
          path: ${{ github.workspace }}/core-java

      - name: Install Appium
        run: npm install -g appium

      - name: Start Selenium Grid
        run: java -jar core-java/libs/selenium-server-4.4.0.jar standalone > core-java/selenium-grid.log &

      - name: AVD cache
        uses: actions/cache@v3
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd-30

      - name: All Test execution
        uses: reactivecircus/android-emulator-runner@v2
        if: github.event_name == 'push'
        with:
          avd-name: Pixel_5
          api-level: 30
          target: google_apis
          arch: x86_64
          profile: pixel_5
          ram-size: 2048M
          heap-size: 512M
          disk-size: 2048M
          force-avd-creation: false
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: true
          script: mvn org.jacoco:jacoco-maven-plugin:prepare-agent install -f core-java/pom.xml -Pcoverage-per-test

      - name: PR Test execution
        uses: reactivecircus/android-emulator-runner@v2
        if: github.event_name == 'pull_request'
        with:
          avd-name: Pixel_5
          api-level: 30
          target: google_apis
          arch: x86_64
          profile: pixel_5
          ram-size: 2048M
          heap-size: 512M
          disk-size: 2048M
          force-avd-creation: false
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: true
          script: mvn org.jacoco:jacoco-maven-plugin:prepare-agent install -f core-java/pom.xml -Pcoverage-per-test -Dsuite-xml=test-suites/testng-pr.xml

      - name: Test Report
        if: always()
        run: cat ${{ github.workspace }}/core-java/target/surefire-reports/my-report.md > $GITHUB_STEP_SUMMARY

      - name: Upload target folder
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: target
          path: |
            ${{ github.workspace }}/core-java/logs
            ${{ github.workspace }}/core-java/selenium-grid.log
            ${{ github.workspace }}/core-java/target
            ${{ github.workspace }}/core-java/reports

  analysis:
    if: github.event_name == 'push'
    needs:
      - test
    runs-on: ubuntu-latest
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install Java and Maven
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Restore local Maven repository
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ github.sha }}

      - name: Download target folder
        uses: actions/download-artifact@v3
        with:
          name: target
          path: ${{ github.workspace }}/core-java

      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B sonar:sonar -f core-java/pom.xml -DskipTests -Dcheckstyle.skip
