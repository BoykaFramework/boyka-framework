name: Common Test workflow for boyka-framework

on:
  workflow_call:
    inputs:
      runs-on:
        type: string
        description: On which runner to run on
        default: ubuntu-latest
      java-version:
        type: string
        description: Version of Java to run on
        default: '17'
      suite-name:
        type: string
        description: Test Suite name to run
        default: ''
      profile-name:
        type: string
        description: Test Profile Name
        default: coverage-test
      run-appium:
        type: boolean
        description: Start Appium server
        default: false
      emulator-name:
        type: string
        description: Emulator / Simulator name
        default: Pixel_7_Pro
      emulator-profile:
        type: string
        description: Emulator Profile Name
        default: pixel_6_pro
      emulator-target:
        type: string
        description: Emulator target image
        default: google_apis
      emulator-arch:
        type: string
        description: Emulator target architecture
        default: x86_64
      emulator-version:
        type: number
        description: Emulator Target version
        default: 30
      emulator-channel:
        type: string
        description: Emulator SDK channel
        default: stable
      simulator-name:
        type: string
        description: iOS Simulator Name
        default: iPhone 15
      simulator-version:
        type: number
        description: iOS Simulator Name
        default: 17.4
      run-grid:
        type: boolean
        description: Start Selenium Grid
        default: false
      run-ios:
        type: boolean
        description: Start iOS Simulator
        default: false
      run-android:
        type: boolean
        description: Start Android Emulator
        default: false
      run-web:
        type: boolean
        description: Start Local Web Browser
        default: false
    secrets:
      cloudUser:
        required: false
      cloudKey:
        required: false

jobs:
  test:
    runs-on: ${{ inputs.runs-on }}
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4

      - name: Install Java and Maven
        uses: actions/setup-java@v4
        with:
          java-version: ${{ inputs.java-version }}
          distribution: 'temurin'
          cache: 'maven'
          check-latest: true

      - name: Install Appium 2.0
        if: ${{ inputs.run-appium }}
        run: |
          if [ "${{ startsWith(inputs.runs-on, 'ubuntu') }}" == "true" ]; then
            sudo apt update && sudo apt upgrade
            sudo apt install ffmpeg
          else
            brew install ffmpeg
            brew tap wix/brew && brew install wix/brew/applesimutils
          fi
          npm install -g appium
          if [ "${{ inputs.run-android }}" == "true" ]; then
            appium driver install uiautomator2
          fi
          if [ "${{ inputs.run-ios }}" == "true" ]; then
            appium driver install xcuitest
          fi
          if [[ "${{ startsWith(inputs.runs-on, 'macos') }}" == "true" && "${{ inputs.run-ios }}" == "false" ]]; then
            npx appium driver install mac2
          fi
          mkdir core-java/logs
          appium server --address 127.0.0.1 --port 4724 --use-drivers uiautomator2 --allow-insecure get_server_logs,chromedriver_autodownload > core-java/logs/appium-android-server.log 2>&1 &

      - name: Start Selenium Grid for Web
        if: ${{ inputs.run-grid && ! inputs.run-appium }}
        run: |
          docker compose -f core-java/compose/docker-compose.yml up -d

      - name: Launch iOS Simulator
        if: ${{ inputs.run-ios }}
        uses: futureware-tech/simulator-action@v4
        with:
          model: ${{ inputs.simulator-name }}
          os: 'iOS'
          os_version: ${{ inputs.simulator-version }}
          shutdown_after_job: true
          wait_for_boot: true
          erase_before_boot: true

      - name: Enable KVM
        if: inputs.run-android
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm

      - name: AVD cache
        uses: actions/cache@v4
        id: avd-cache
        if: inputs.run-android
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd-${{ inputs.emulator-name }}-${{ inputs.emulator-version }}-${{ inputs.emulator-profile }}-${{ inputs.emulator-arch }}-${{ inputs.emulator-target }}-${{ inputs.emulator-channel }}

      - name: create AVD and generate snapshot for caching
        if: inputs.run-android && steps.avd-cache.outputs.cache-hit != 'true'
        uses: reactivecircus/android-emulator-runner@v2
        with:
          avd-name: ${{ inputs.emulator-name }}
          api-level: ${{ inputs.emulator-version }}
          target: ${{ inputs.emulator-target }}
          arch: ${{ inputs.emulator-arch }}
          profile: ${{ inputs.emulator-profile }}
          channel: ${{ inputs.emulator-channel }}
          force-avd-creation: false
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: false
          script: echo "Generated AVD snapshot for caching."

      - name: All Test execution
        if: ${{ inputs.run-android }}
        uses: reactivecircus/android-emulator-runner@v2
        with:
          avd-name: ${{ inputs.emulator-name }}
          api-level: ${{ inputs.emulator-version }}
          target: ${{ inputs.emulator-target }}
          arch: ${{ inputs.emulator-arch }}
          profile: ${{ inputs.emulator-profile }}
          channel: ${{ inputs.emulator-channel }}
          force-avd-creation: false
          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: true
          pre-emulator-launch-script: avdmanager list device
          script: mvn verify org.jacoco:jacoco-maven-plugin:prepare-agent -f core-java/pom.xml -Dsuite-name=${{ inputs.suite-name }} -Pcoverage-test

      - name: All ${{ inputs.suite-name }} Test execution
        if: ${{ ! inputs.run-android }}
        env:
          BS_USER: ${{ secrets.cloudUser }}
          BS_KEY: ${{ secrets.cloudKey }}
          LT_USER: ${{ secrets.cloudUser }}
          LT_KEY: ${{ secrets.cloudKey }}
        run: mvn verify org.jacoco:jacoco-maven-plugin:prepare-agent -f core-java/pom.xml -Dsuite-name=${{ inputs.suite-name }} -P${{ inputs.profile-name }}

      - name: Stop Selenium Grid for Web
        if: ${{ inputs.run-grid && ! inputs.run-appium && always() }}
        run: |
          docker compose -f core-java/compose/docker-compose.yml down --remove-orphans

      - name: Stop Appium Server
        if: ${{ inputs.run-appium && always() }}
        run: npx kill-port --port 4724

      - name: Set Summary Report
        run: echo "$(cat ${{ github.workspace }}/core-java/target/failsafe-reports/my-report.md)" >> $GITHUB_STEP_SUMMARY

      - name: Upload target folder
        uses: actions/upload-artifact@v4
        if: ${{ failure() }}
        with:
          name: target-${{ inputs.suite-name }}
          retention-days: 1
          path: |
            ${{ github.workspace }}/core-java/target
            ${{ github.workspace }}/core-java/logs
            ${{ github.workspace }}/core-java/screenshots
            ${{ github.workspace }}/core-java/videos

      - name: Upload reports folder
        uses: actions/upload-artifact@v4
        with:
          name: reports-${{ inputs.suite-name }}
          retention-days: 1
          path: |
            ${{ github.workspace }}/core-java/reports
