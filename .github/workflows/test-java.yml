name: Test boyka-framework project

on:
  pull_request:
    branches:
      - main
    paths:
      - 'core-java/**'
      - '.github/**'
  push:
    branches:
      - main
    paths:
      - 'core-java/**'
      - '.github/**'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3

      - name: Install Java and Maven
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Build the project
        run: mvn install -f core-java/pom.xml -DskipTests

      - name: Upload target folder
        uses: actions/upload-artifact@v3
        with:
          name: target
          path: ${{ github.workspace }}/core-java/target

      - name: Cache local Maven repository
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ github.sha }}

  test:
    needs:
      - build
    runs-on: macos-latest
    env:
      BS_USER: ${{ secrets.BS_USER }}
      BS_KEY: ${{ secrets.BS_KEY }}
      LT_USER: ${{ secrets.LT_USER }}
      LT_KEY: ${{ secrets.LT_KEY }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3

      - name: Install Java and Maven
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Restore local Maven repository
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ github.sha }}

      - name: Download target folder
        uses: actions/download-artifact@v3
        with:
          name: target
          path: ${{ github.workspace }}/core-java

      - name: Start Selenium Grid
        run: java -jar core-java/libs/selenium-server-4.1.2.jar standalone > core-java/selenium-grid.log &

      - name: All Test execution
        if: github.event_name != 'pull_request'
        run: mvn org.jacoco:jacoco-maven-plugin:prepare-agent install -f core-java/pom.xml -Pcoverage-per-test

      - name: PR Test execution
        if: github.event_name != 'push'
        run: mvn org.jacoco:jacoco-maven-plugin:prepare-agent install -f core-java/pom.xml -Pcoverage-per-test -Dsuite-xml=test-suites/testng-pr.xml

      - name: Test Report
        uses: dorny/test-reporter@v1
        if: github.event_name != 'pull_request' && (success() || failure())
        with:
          name: Test Results
          path: ${{ github.workspace }}/core-java/target/surefire-reports/*.xml
          reporter: java-junit

      - name: Upload target folder
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: target
          path: |
            ${{ github.workspace }}/core-java/logs
            ${{ github.workspace }}/core-java/screenshots
            ${{ github.workspace }}/core-java/test-output
            ${{ github.workspace }}/core-java/selenium-grid.log
            ${{ github.workspace }}/core-java/target
            ${{ github.workspace }}/core-java/reports

  analysis:
    if: github.event_name != 'pull_request'
    needs:
      - test
    runs-on: ubuntu-latest
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install Java and Maven
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Restore local Maven repository
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ github.sha }}

      - name: Download target folder
        uses: actions/download-artifact@v3
        with:
          name: target
          path: ${{ github.workspace }}/core-java

      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B sonar:sonar -f core-java/pom.xml -DskipTests -Dcheckstyle.skip
