<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ MIT License
  ~
  ~ Copyright (c) 2022 Wasiq Bhamla
  ~
  ~ Permission is hereby granted, free of charge, to any person obtaining a copy
  ~ of this software and associated documentation files (the "Software"), to deal
  ~ in the Software without restriction, including without limitation the rights
  ~ to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
  ~ copies of the Software, and to permit persons to whom the Software is
  ~ furnished to do so, subject to the following conditions:
  ~
  ~ The above copyright notice and this permission notice shall be included in all
  ~ copies or substantial portions of the Software.
  -->
<!DOCTYPE module PUBLIC
        "-//Checkstyle//DTD Checkstyle Configuration 1.3//EN"
        "https://checkstyle.org/dtds/configuration_1_3.dtd">
<!-- The DuraSpace Code Style Requirements defined below are also described
	in the README.md file, which can be viewed in this directory or on Github:
	https://github.com/duraspace/resources/blob/master/checkstyle/README.md For
	more information on specific CheckStyle configurations, see: http://checkstyle.sourceforge.net/checks.html -->
<module name="Checker">
    <!-- Configure checker to use UTF-8 encoding -->
    <property name="charset" value="UTF-8"/>
    <!-- Configure checker to run on files with these extensions -->
    <property name="fileExtensions"
              value="java, properties, cfg, xml"/>

    <!-- Enables suppressions, as defined in the file found at `suppressionsLocation`
        in the checkstyle plugin configuration -->
    <!--	<module name="SuppressionFilter">-->
    <!--		<property name="file" value="${checkstyle.suppressions.file}" />-->
    <!--	</module>-->

    <!-- No tab characters ('\t') allowed in the source code -->
    <module name="FileTabCharacter">
        <property name="eachLine" value="true"/>
        <property name="fileExtensions"
                  value="java, properties, cfg, css, js, xml"/>
    </module>

    <!-- No Trailing Whitespace, except on lines that only have an asterisk
        (e.g. Javadoc comments) -->
    <module name="RegexpSingleline">
        <property name="format" value="(?&lt;!\*)\s+$|\*\s\s+$"/>
        <property name="message" value="Line has trailing whitespace"/>
        <property name="fileExtensions"
                  value="java, properties, cfg, css, js, xml"/>
    </module>

    <!-- Allow individual lines of code to be excluded from these rules, if
        they are annotated with @SuppressWarnings. See also SuppressWarningsHolder
        below -->
    <module name="SuppressWarningsFilter"/>

    <!-- Check individual Java source files for specific rules -->
    <!-- Maximum line length is 120 characters -->
    <module name="LineLength">
        <property name="max" value="120"/>
        <!-- Make exceptions for package names, imports, URLs, JavaDoc {@link}
            tags, and very long method names -->
        <property name="ignorePattern"
                  value="^package.*|^import.*|http://|https://|@link|[ ]*\.?\S*"/>
    </module>

    <module name="TreeWalker">
        <!-- Highlight any TODO or FIXME comments in info messages -->
        <module name="TodoComment">
            <property name="severity" value="info"/>
            <property name="format" value="(TODO)|(FIXME)"/>
        </module>

        <!-- Do not report errors on any lines annotated with @SuppressWarnings -->
        <module name="SuppressWarningsHolder"/>

        <!-- Check that local variables that never have their values changed are
            declared final. -->
        <!-- Rationale: Changing the value of parameters during the execution of
            the method's algorithm can be confusing and should be avoided. -->
        <module name="FinalLocalVariable"/>

        <!-- Check that parameters for methods, constructors, and catch blocks
            are final. -->
        <module name="FinalParameters"/>

        <!-- ##### Import statement requirements ##### -->
        <!-- Star imports (e.g. import java.util.*) are NOT ALLOWED -->
        <module name="AvoidStarImport"/>

        <!-- Redundant import statements are NOT ALLOWED -->
        <module name="RedundantImport"/>
        <!-- Unused import statements are NOT ALLOWED -->
        <module name="UnusedImports"/>
        <!-- Ensure imports appear alphabetically and grouped -->
        <module name="CustomImportOrder">
            <property name="sortImportsInGroupAlphabetically"
                      value="true"/>
            <property name="separateLineBetweenGroups" value="true"/>
            <property name="customImportOrderRules"
                      value="STATIC###STANDARD_JAVA_PACKAGE###THIRD_PARTY_PACKAGE"/>
        </module>

        <!-- ##### Javadocs requirements ##### -->
        <!-- Requirements for Javadocs for classes/interfaces -->
        <module name="JavadocType">
            <!-- All public classes/interfaces MUST HAVE Javadocs -->
            <property name="scope" value="public"/>
            <!-- Add an exception for anonymous inner classes -->
            <property name="excludeScope" value="anoninner"/>
            <!-- Ignore errors related to unknown tags -->
            <property name="allowUnknownTags" value="true"/>
            <!-- Allow params tags to be optional -->
            <property name="allowMissingParamTags" value="false"/>
        </module>
        <!-- Requirements for Javadocs for methods -->
        <module name="JavadocMethod">
            <!-- All public methods MUST HAVE Javadocs -->
            <property name="accessModifiers" value="public"/>
            <!-- Allow params, throws and return tags to be optional -->
            <property name="allowMissingParamTags" value="true"/>
            <property name="allowMissingReturnTag" value="true"/>
        </module>

        <!-- ##### Requirements for K&R Style braces ##### -->
        <!-- Code blocks MUST HAVE braces, even single line statements (if, while,
            etc) -->
        <module name="NeedBraces"/>
        <!-- Left braces should be at the end of current line (default value) -->
        <module name="LeftCurly"/>
        <!-- Right braces should be on start of a new line (default value) -->
        <module name="RightCurly"/>

        <!-- ##### Indentation / Whitespace requirements ##### -->
        <!-- Require 4-space indentation (default value) -->
        <module name="Indentation"/>
        <!-- Whitespace should exist around all major tokens -->
        <module name="WhitespaceAround">
            <!-- However, make an exception for empty constructors, methods, types,
                etc. -->
            <property name="allowEmptyConstructors" value="true"/>
            <property name="allowEmptyMethods" value="true"/>
            <property name="allowEmptyTypes" value="true"/>
            <property name="allowEmptyLoops" value="true"/>
        </module>
        <!-- Validate whitespace around Generics (angle brackets) per typical conventions
            http://checkstyle.sourceforge.net/config_whitespace.html#GenericWhitespace -->
<!--        <module name="GenericWhitespace"/>-->

        <!-- ##### Blank line requirements ##### -->
        <module name="EmptyLineSeparator">
            <!-- Allow no more than one empty line -->
            <property name="allowMultipleEmptyLines" value="false"/>
            <property name="allowMultipleEmptyLinesInsideClassMembers"
                      value="false"/>
            <!-- Ensures empty lines are used to separate primary code sections -->
            <property name="tokens"
                      value="IMPORT, CLASS_DEF, INTERFACE_DEF, ENUM_DEF,
                                           STATIC_INIT, METHOD_DEF, CTOR_DEF"/>
        </module>

        <!-- ##### Requirements for "switch" statements ##### -->
        <!-- "switch" statements MUST have a "default" clause -->
        <module name="MissingSwitchDefault"/>
        <!-- "case" clauses in switch statements MUST include break, return, throw
            or continue -->
        <module name="FallThrough"/>

        <!-- ##### Other / Miscellaneous requirements ##### -->
        <!-- Require utility classes do not have a public constructor -->
        <module name="HideUtilityClassConstructor"/>
        <!-- Require each variable declaration is its own statement on its own
            line -->
        <module name="MultipleVariableDeclarations"/>
        <!-- Each line of code can only include one statement -->
        <module name="OneStatementPerLine"/>
        <!-- Require that "catch" statements are not empty (must at least contain
            a comment) -->
        <module name="EmptyCatchBlock"/>
    </module>
</module>